(ns solita.etp.energiatodistus-generator
  (:require [clojure.java.jdbc :as jdbc]
            [solita.etp.db :as db]
            [solita.etp.service.energiatodistus :as energiatodistus-service]
            [solita.etp.test-data.energiatodistus :as energiatodistus-test-data]
            [solita.etp.test-data.laatija :as laatija-test-data]
            [solita.etp.test-system :as ts])
  (:import (java.time Instant)))

(defn add-and-shortcut-signing-energiatodistukset-for-performance-testing! [db laatija-id versio energiatodistukset]
  "Adds `energiatodistukset` into the `db` setting them as signed before inserting. 
  This is perhaps not 100% accurate representation on how production data 
  looks, but it should be close enough for performance testing purposes."
  (let [db-rows (map #(-> % (assoc :versio versio
                                   :laatija-id laatija-id
                                   :tila-id 2
                                   :allekirjoitusaika (Instant/now)
                                   ;; Set voimassaolo-paattymisaika 10 years into the future.
                                   :voimassaolo-paattymisaika (-> (Instant/now)
                                                                  (.plusSeconds 315360000)))
                          energiatodistus-service/energiatodistus->db-row)
                     energiatodistukset)]
    (jdbc/insert-multi!
      db :energiatodistus
      (keys (first db-rows))
      (map vals db-rows)
      db/default-opts)))

(defn generate-and-insert-energiatodistukset-for-performance-testing!
  "Adds count `n` energiatodistus into the given database `db`. 
  Adds the energiatodistukset in batches. Prints the count of energiatodistukset inserted 
  and elapsed time after the insertion of every batch. 
  The easiest way to provide the database `db` is probably by calling `user/db`. 
  Will also add a new laatija that is then put as the laatija of 
  every energiatodistus created by this function. The laatija is generated by 
  `solita.etp.test-data.laatija/generate-and-insert!`. 
  The energiatodistukset is generated by `solita.etp.test-data.energiatodistus/generate-adds`. 
  The adding of energiatodistukset is handled 
  by `add-and-shortcut-signing-energiatodistukset-for-performance-testing!`."
  [db n]
  (let [batch-size 100]
    (with-bindings {#'ts/*db* db}
      (let [[laatija-id _] (-> (laatija-test-data/generate-and-insert! 1) first)
            energiatodistukset (energiatodistus-test-data/generate-adds n 2018 true)]
        (doseq [batch (partition-all batch-size energiatodistukset)]
          (time (add-and-shortcut-signing-energiatodistukset-for-performance-testing! db laatija-id 2018 batch))
          (println (str "Added " (count batch) " energiatodistus")))))))